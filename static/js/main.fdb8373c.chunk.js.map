{"version":3,"sources":["components/WeatherPage.jsx","components/About.jsx","components/Contact.jsx","components/Service.jsx","components/Navbar.jsx","App.js","index.js"],"names":["WeatherPage","useState","city","setCity","zip","setZip","minTemp","maxTemp","currTemp","weatherReport","setWeatherReport","useEffect","className","onSubmit","e","preventDefault","Axios","then","res","console","log","data","main","name","temp_min","temp_max","temp","catch","err","document","getElementById","value","style","type","id","placeholder","onChange","target","handleChangeCity","fontSize","handleChangeZip","About","padding","Contact","firstName","lastName","mobile","age","email","profile","info","setInfo","show","setShow","handleChange","color","for","required","onClick","Service","Navbar","background","to","App","exact","path","ReactDOM","render"],"mappings":"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","file":"static/js/main.fdb8373c.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport Axios from \"axios\";\r\n\r\nconst WeatherPage = () => {\r\n    const [city,setCity] = useState(\"\");\r\n    const [zip,setZip] = useState(\"\");\r\n    const [weatherReport,setWeatherReport] = useState({\r\n        city: \"\",\r\n        minTemp: \"\",\r\n        maxTemp: \"\",\r\n        currTemp: \"\"\r\n    });\r\n    useEffect(()=>{\r\n\r\n    },[weatherReport,zip,city]);\r\n\r\n    const getData = (e) => {\r\n        e.preventDefault();\r\n        if(city){\r\n            Axios(`http://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=a348fd06207bc3926c97032f1c0b940d`).then((res)=>{\r\n            console.log(res);\r\n            console.log(res.data.main);\r\n            setWeatherReport({\r\n                city: res.data.name,\r\n                minTemp: res.data.main.temp_min,\r\n                maxTemp: res.data.main.temp_max,\r\n                currTemp: res.data.main.temp\r\n            });\r\n            setCity(\"\");\r\n            setZip(\"\");\r\n        }).catch((err)=>{\r\n            console.log(err);\r\n        })\r\n        }else if(zip){\r\n            Axios(`http://api.openweathermap.org/data/2.5/weather?zip=${zip},IN&units=metric&appid=a348fd06207bc3926c97032f1c0b940d`).then((res)=>{\r\n            console.log(res);\r\n            console.log(res.data.main);\r\n            setWeatherReport({\r\n                city: res.data.name,\r\n                minTemp: res.data.main.temp_min,\r\n                maxTemp: res.data.main.temp_max,\r\n                currTemp: res.data.main.temp\r\n            });\r\n            setCity(\"\");\r\n            setZip(\"\");\r\n        }).catch((err)=>{\r\n            console.log(err);\r\n        })\r\n        }else{\r\n            setCity(\"\");\r\n            setZip(\"\");\r\n        }\r\n        document.getElementById(\"city\").value = \"\";\r\n        document.getElementById(\"zip\").value = \"\";\r\n    }\r\n    const handleChangeCity = (e) =>setCity(e.target.value);\r\n    const handleChangeZip = (e) => setZip(e.target.value);\r\n\r\n    return(\r\n        <>\r\n            <div >\r\n                <h1 className=\"text-center mt-5\">Get Weather Updates</h1>\r\n                <form onSubmit={getData} className=\"d-flex flex-column align-items-center \" style={{\r\n\r\n                }}>\r\n                    <input type=\"text\" name=\"city\" id=\"city\" placeholder=\"Enter city name here...\" onChange={(e)=>handleChangeCity(e)} className=\"inp my-3\" />\r\n                    <p className=\" my-0\" style={{\r\n                        fontSize: \"20px\",\r\n\r\n                    }}>OR</p>\r\n                    <input type=\"number\" name=\"zip code\" id=\"zip\" placeholder=\"Enter zipcode here...\" onChange={(e)=>handleChangeZip(e)} className=\"inp my-3\" />\r\n                    <input type=\"submit\" value=\"FIND\" className=\"button mt-5 \" />\r\n                </form>\r\n               {\r\n                   weatherReport.city ? \r\n                   (\r\n                    <table className=\" w-100 mt-3\">\r\n                    <tr className=\"  d-flex justify-content-around  mx-auto w-75 mt-5\">\r\n                        <th className=\"setW \">City</th>\r\n                        <th className=\"setW \">Min Temperature</th>\r\n                        <th className=\"setW \">Max Temperature</th>\r\n                        <th className=\"setW \">Current Temperature</th>\r\n                    </tr>\r\n                    <tr className=\" d-flex justify-content-around mx-auto w-75 mt-3\">\r\n                        <td className=\"setWD\">{weatherReport.city ? weatherReport.city : \"\"} </td>\r\n                        <td className=\"setWD\">{weatherReport.minTemp ? weatherReport.minTemp : \"\"} &#176;C</td>\r\n                        <td className=\"setWD\">{weatherReport.maxTemp ? weatherReport.maxTemp : \"\"} &#176;C</td>\r\n                        <td className=\"setWD\">{weatherReport.currTemp ? weatherReport.currTemp : \"\"} &#176;C</td>\r\n                    </tr>\r\n                </table>\r\n                   ): \"\"\r\n               }\r\n            </div>\r\n            \r\n        </>\r\n    )\r\n};\r\n\r\nexport default WeatherPage;\r\n","import React from 'react'\r\n\r\n\r\nconst About = () => {\r\n    return (\r\n        <div className=\"d-flex flex-column align-items-center justify-content-center\">\r\n            <h1 className=\"my-5\">About Us</h1>\r\n            <p className=\" mx-5\" style={{\r\n                padding: \"0 250px\"\r\n            }}>\r\n\r\nWeather app is a team of IT experts and data scientists that has been practising deep weather data science since 2014. For each point on the globe, OpenWeather provides historical, current and forecasted weather data via light-speed APIs. Headquarters in London, UK.\r\n            \r\nOur highly efficient technological platform is based on ML, neural networks, and data science technologies.\r\nThe proprietary convolutional neural network collects and processes wide range of data sources to cover any location and consider the local nuances of climate.\r\n\r\nWe collect and process weather data from different sources such as global and local weather models, satellites, radars and vast network of weather stations.</p>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default About;","import React, { useState } from 'react'\r\n\r\n\r\nconst Contact = () => {\r\n\r\n    const [info,setInfo] = useState({\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        mobile: \"\",\r\n        age: \"\",\r\n        email: \"\",\r\n        profile: \"\",\r\n    });\r\n    const [show,setShow] = useState(true);\r\n\r\n    const handleChange = (e) => {\r\n        setInfo({...info,\r\n        [e.target.name] :e.target.value\r\n        })\r\n    }\r\n\r\n    const onSubmitForm = () => {\r\n        setShow(false);\r\n    }\r\n\r\n    \r\n    return (\r\n       <div>\r\n           {    \r\n               show ? \r\n               <div className=\"form-container\">\r\n            <div className=\"form-header d-flex justify-content-center\">\r\n                <h1 className=\" mx-auto\" style={{\r\n                    color: \"#000\"\r\n                }}>Contact Form</h1>\r\n            </div>\r\n            <div className=\"form-body\">\r\n                <div className=\"type-1 first\">\r\n                    <label for=\"name\">First Name</label>\r\n                    <input onChange={handleChange} className=\"input-bar\" id=\"firstName\" placeholder=\"Enter First Name Here\" type=\"text\" name=\"firstName\" required />\r\n                </div>\r\n                <div className=\"type-1 \">\r\n                    <label for=\"name\">Last Name</label>\r\n                    <input onChange={handleChange} className=\"input-bar\" id=\"lastName\" placeholder=\"Enter Last Name Here\" type=\"text\" name=\"lastName\" required />\r\n                </div>\r\n                <div className=\"type-1 \">\r\n                    <label for=\"name\">Mobile</label>\r\n                    <input onChange={handleChange} className=\"input-bar\" id=\"mobile\" placeholder=\"Enter Mobile Here\" type=\"text\" name=\"mobile\" required />\r\n                </div>\r\n\r\n                <div className=\"type-1\">\r\n                    <label for=\"email\">Email</label>\r\n                    <input onChange={handleChange} className=\"input-bar\" id=\"email\" placeholder=\"abc@mail.com\" type=\"email\" name=\"email\" required />\r\n                </div>\r\n                <div className=\"type-1\">\r\n                    <label for=\"age\">Age </label>\r\n                    <input onChange={handleChange} className=\"input-bar\" id=\"age\" placeholder=\"Age\" type=\"number\" name=\"age\" />\r\n                </div>\r\n                <div className=\"type-1\">\r\n                    <label for=\"age\">Profile</label>\r\n                    <input onChange={handleChange} className=\"input-bar\" id=\"profile\" placeholder=\"Age\" type=\"text\" name=\"profile\" />\r\n                </div>\r\n                <div className=\"type-1 last\">\r\n                    <input onClick={onSubmitForm} className=\"input-bar button-color\"    type=\"submit\" value=\"Submit\" />\r\n                </div>\r\n            </div>\r\n        </div> :\r\n\r\n           <div className=\"form-container\">\r\n            <div className=\"form-header d-flex justify-content-center\">\r\n                <h1 className=\" mx-auto\" style={{\r\n                    color: \"#000\"\r\n                }}>Contact Information</h1>\r\n            </div>\r\n            <div className=\"form-body py-3\">\r\n                <div className=\"type-1 d-flex\">\r\n                    <label for=\"name\">First Name:</label>\r\n                    <p className=\"mx-4\">{info ? info.firstName : \"\"}</p>\r\n                </div>\r\n                <div className=\"type-1 d-flex\">\r\n                    <label for=\"name\">Last Name:</label>\r\n                    <p className=\"mx-4\">{info ? info.lastName : \"\"}</p>\r\n                </div>\r\n                <div className=\"type-1 d-flex\">\r\n                    <label for=\"name\">Mobile:</label>\r\n                    <p className=\"mx-4\">{info ? info.mobile : \"\"}</p>\r\n                </div>\r\n\r\n                <div className=\"type-1 d-flex\">\r\n                    <label for=\"email\">Email:</label>\r\n                    <p className=\"mx-4\">{info ? info.email : \"\"}</p>\r\n                </div>\r\n                <div className=\"type-1 d-flex\">\r\n                    <label for=\"age\">Age:</label>\r\n                    <p className=\"mx-4 d-flex\">{info ? info.age : \"\"}</p>\r\n                </div>\r\n                <div className=\"type-1 d-flex\">\r\n                    <label for=\"age \">Profile:</label>\r\n                    <p className=\"mx-4\">{info ? info.profile : \"\"}</p>\r\n                </div>\r\n            </div>\r\n        </div> }\r\n       </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Contact;","import React from 'react'\r\n\r\n\r\nconst Service = () => {\r\n    return (\r\n        <div className=\"d-flex flex-column align-items-center justify-content-center\">\r\n            <h1 className=\"my-5\">Service</h1>\r\n            <p className=\"p-5 mx-5\">\r\n            Why our Free Weather API is so good yet free\r\nSuch powerful technologies as our ML can significantly advance both the accuracy and computing speed of global assemble forecasting models, a practice that was impossible only a few years ago. That makes the entire calculation fast and cost-effective, providing millions of customers with accurate forecasts promptly.\r\n\r\nWeather data should be open to anyone\r\nNot many types of data can affect business decisions and personal everyday plans on the same scale as weather data does. And that is not to mention the billions of dollars that businesses and governments are losing indeed due to extreme weather conditions that are beyond their control. However, most applications of accurate forecasts and history for businesses are more routine, yet more practical for daily analysis and decision-making. To name just a few, these include analysis of the impact of weather on customers’ demand for retailers, planning of safe routes for transport companies, accurate evaluation of customers’ cases for insurers, sensitive planning of energy consumption for householders, and timely watering of crops for farmers.\r\n\r\nModern technologies make accurate weather data not only widely available, but also nearly free\r\nWhat seemed impossible just a few years ago, you can now do at lightning speed. Machine learning (ML), neural networks, big data, cloud spaces – all of this is easily accessible for calculating hugely sophisticated forecasting models such as Numerical Weather Prediction (NWP) or short-term forecasts that update rapidly.\r\n\r\nML empowers the classic forecasting models\r\nWhen it comes to the computing and valuation of complex hydro-meteorological models, we rely on the most honourable agencies such as NOAA, Met Office, ECMWF, Environmental Canada. But we can enhance their models with our knowledge of data science and ML, given that most of the mathematics behind forecasting is well-known. For example, the forecasting algorithms for its extreme form, nowcast, have been in use since the 1950s’ radar data is open, and even free for some territories. Additionally, there are lots of specialised instruments for developers, such as Python libraries for the STEP (Short-term Ensemble Prediction System) computation.\r\n\r\nPlethora of open weather data to be fed the ML model\r\nFortunately, global meteorological companies such as NOAA, the Met Office, Environment Canada and ECMWF share our belief that weather data should be open. They supply us with enormous data feeds, including data from radars, weather satellites and weather stations. They also provide a lot of more specialised products such as road alerts, road risks and marine weather.\r\n\r\nWeather data finds their way to developers with Openweather ML model\r\nBefore weather data can find its way to businesses, it has to pass through the hands of developers, and they have to come to us. Our weather products are based on open data and open technologies. With our convolutional neural networks and ML technologies, we significantly enhance fundamental global forecast models with radar-based nowcasts, weather satellite data and the vast network of weather stations (82,000), rain gauges and other weather sensors. Developers access these vast amounts of data via our light-speed, elegant APIs.\r\n\r\nOpenweather ML calculates weather data for any location, for any moment, in the past, now, and in the future\r\nWith our APIs, you can get data for any location on the globe: minutely forecast for the two hours, hourly forecasts for one week, current weather, and history for the 40 years back, with a vast range of meteorological parameters. All these remarkable products are available for free with up to 1 million calls per month. For those who are looking for a bigger service, we provide several paid subscriptions and a range of historical products.\r\n\r\nIf you want to know how accurate our weather model is, please read our detailed report.\r\n\r\nFor all requests, please contact us at info@openweathermap.org.\r\n\r\n\r\n \r\nWe use cookies which are essential for the site to work. We also use non-essential cookies to help us improve our services. Any data collected is anonymised. You can allow all cookies or manage them individually..</p>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Service;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <div className=\"d-flex justify-content-between\" style={{\r\n            background: \"#000\",\r\n        }}>\r\n            <div className=\"w-25 d-flex justify-content-around align-items-center\" style={{\r\n                fontSize: \"24px\",\r\n                color: \"yellow\"\r\n            }}>Weather App</div>\r\n            <div className=\"d-flex justify-content-around align-items-center w-50 \">\r\n                <Link to=\"/\" className=\"navbarTab\">\r\n                    <p className=\"my-2\">Home</p>\r\n                </Link>\r\n                <Link to=\"/about\" className=\"navbarTab\">\r\n                    <p className=\"my-2\">About</p>\r\n                </Link>\r\n                <Link to=\"/contact\" className=\"navbarTab\">\r\n                    <p className=\"my-2\">Contact</p>\r\n                </Link>\r\n                <Link to=\"/service\" className=\"navbarTab\">\r\n                    <p className=\"my-2\">Service</p>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Navbar;","import './App.css';\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport WeatherPage from './components/WeatherPage';\nimport About from './components/About';\nimport Contact from './components/Contact';\nimport Service from './components/Service';\nimport Navbar from './components/Navbar';\n\nfunction App() {\n  return (\n    <Router>\n      <Navbar />\n      <Switch>\n        <Route exact path=\"/\">\n          <WeatherPage />\n        </Route>\n        <Route exact path=\"/about\">\n          <About />\n        </Route>\n        <Route exact path=\"/contact\">\n          <Contact />\n        </Route>\n        <Route exact path=\"/service\">\n          <Service />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />,document.getElementById('root'));\n"],"sourceRoot":""}